{"version":3,"sources":["components/Login.js","components/ApiUsage.js","components/App.js","index.js"],"names":["Login","react_default","a","createElement","reactstrap_es","className","this","props","signup","id","for","type","name","placeholder","onChange","onChangeForm","value","username","password","onClick","onClickSubmitSignUp","onClickSubmitLogIn","style","display","color","created","usernameForAlert","repeatedUsername","errorLogin","React","Component","example","require","ApiUsage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","handleChangeBody","exampleString","toggle","collapse","state","response","tryitout","responseCode","responseDetails","responseHeaders","JSON","stringify","undefined","handleClickExecute","uri","needId","_id","fetch","method","headers","Headers","Content-Type","Authorization","token","body","then","res","console","log","json","height","padding","borderColor","paddingTop","buttonColor","marginBottom","width","fontWeight","marginLeft","fontSize","fontFamily","pathTitle","flex","description","isOpen","colSpan","descriptionExtended","borderBottomWidth","borderBottomStyle","needBody","backgroundColor","textAlign","JSONPretty_default","borderRadius","App","checkCookie","document","cookie","handleClick","handleClickSubmitSignUp","data","status","handleClickSubmitLogIn","responseData","components_Login","marginTop","href","components_ApiUsage","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.4124d58c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Alert, Container, Col, Form,\n    FormGroup, Label, Input,\n    Button,\n  } from 'reactstrap';\n  \n\n\nclass Login extends React.Component{\n    render() {\n        return (\n          <Container className=\"Login\">\n            <h2>{this.props.signup ? \"Sign Up\" : \"Login\"}</h2>\n            <Form  id=\"form\" className=\"form\">\n              <Col>\n                <FormGroup>\n                  <Label for=\"username\">Username</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    placeholder=\"Enter your username\"\n                    onChange={this.props.onChangeForm}\n                    value={this.props.username}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"********\"\n                    onChange={this.props.onChangeForm}\n                    value= {this.props.password}\n                  />\n                </FormGroup>\n              </Col>\n              <Button onClick={this.props.signup ? this.props.onClickSubmitSignUp : this.props.onClickSubmitLogIn}>Submit</Button>\n            </Form>\n            {!this.props.signup && \n                <div> \n                    <br></br>\n                    <p style={{display: 'inline'}}>Don't have an account? Please click to sign in</p>\n                    <Button onClick={this.props.onClick}  color=\"link\">HERE</Button>\n                </div>\n            }\n            {this.props.signup && \n                <div> \n                    <br></br>\n                    <p style={{display: 'inline'}}>Have already an account?</p>\n                    <Button onClick={this.props.onClick}  color=\"link\">Go to login</Button>\n                </div>\n            }\n            {this.props.created && \n                <div> \n                    <br></br>\n                    <Alert color=\"success\">\n                         Account \"{this.props.usernameForAlert}\" created successfully! Try to log in\n                    </Alert>\n                </div>\n            }\n            {this.props.repeatedUsername && \n                <div> \n                    <br></br>\n                    <Alert color=\"danger\">\n                         The username is already in use\n                    </Alert>\n                </div>\n            }\n            {this.props.errorLogin && \n                <div> \n                    <br></br>\n                    <Alert color=\"danger\">\n                         Error: Unable to Log In\n                    </Alert>\n                </div>\n            }\n            \n          </Container>\n        );\n      }\n  }\n\n  export default Login;","import React from 'react';\nimport { Collapse, Button, CardBody, Card, Table, Input } from 'reactstrap';\nimport './index.css'\nimport JSONPretty from 'react-json-pretty';\n\n\nconst example = require('./example.json');\n\nclass ApiUsage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false, tryitout: false,\n      response: false, responseCode: null, responseDetails: null, responseHeaders: null,\n      _id: '',  exampleString: JSON.stringify(example, undefined, 2)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n\n\n  }\n  handleChangeBody = (e) => {\n    this.setState({exampleString : e.target.value})\n    \n  }\n\n  \n\n\n  toggle = () => {\n    this.setState({\n      collapse: !this.state.collapse,\n      response: false, tryitout: false, responseCode: null, responseDetails: null, responseHeaders: null, exampleString: JSON.stringify(example, undefined, 2)\n    });\n  }\n\n  tryitout = () => {\n    this.setState({ tryitout: !this.state.tryitout });\n  }\n\n  handleClickExecute = () => {\n    var uri = this.props.uri;\n    if (this.props.needId) {\n      uri += this.state._id;\n    }\n    fetch(uri, {\n      method: this.props.method,\n      headers: new Headers({\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Bearer \" + this.props.token\n      }),\n      body: this.props.method === 'POST' || this.props.method === 'PUT' || this.props.method === 'PATCH'\n        ? this.state.exampleString : null,\n    }).then((res) => {\n      this.setState({\n        responseCode: res['status'],\n        responseHeaders: res['headers'],\n      })\n      console.log(this.state.responseCode)\n      if(this.state.responseCode !== 400){\n        return this.props.method === 'DELETE' ? res : res.json();\n      }else{\n        return res;\n      }\n      \n    })\n      .then((response) => {\n        this.setState(\n          {\n            response: true,\n            responseDetails: JSON.stringify(response),\n\n          }\n        );\n      });\n\n\n\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Card className=\"Card\" style={{ height: '4em', padding: '0px', borderColor: this.props.borderColor, }}>\n          <CardBody style={{ padding: '0.70rem', paddingTop: '10px' }} onClick={this.toggle}>\n            <Button color={this.props.buttonColor} onClick={this.toggle} style={{ marginBottom: '1rem', width: '10%' }}>{this.props.method}</Button>\n            <span style={{ fontWeight: \"600\", marginLeft: \"2%\", fontSize: '16px', fontFamily: 'monospace' }}>{this.props.pathTitle}</span>\n            <div style={{ flex: '1', fontFamily: 'sans-serif', color: '#3b4151', display: 'inline', marginLeft: '2%', fontSize: '13px' }}>{this.props.description}</div>\n          </CardBody>\n        </Card>\n\n        <Collapse isOpen={this.state.collapse}>\n          <Card>\n            <CardBody>\n              <Table>\n                <tbody>\n                  <tr>\n                    <td colSpan=\"2\">{this.props.descriptionExtended}</td>\n                  </tr>\n                  <tr>\n                    <td colSpan=\"2\">\n                      Parameters\n                    {!this.state.tryitout &&\n                        <Button color=\"warning\" onClick={this.tryitout} style={{ marginLeft: '75%' }}>Try it out</Button>\n                      }\n                      {this.state.tryitout &&\n                        <Button color=\"danger\" onClick={this.tryitout} style={{ marginLeft: '75%' }}>Cancel</Button>\n                      }\n\n                    </td>\n                  </tr>\n                  <tr style={{ borderBottomWidth: '2px', borderBottomStyle: 'solid' }}>\n                    <th >\n                      Name\n                  </th>\n                    <th>Description</th>\n                  </tr>\n                  {this.props.pathTitle === '/api/companies' && !this.props.needId && this.props.method === 'GET' &&\n                    <tr>\n                      <td colSpan=\"2\">There are no parameters for this method</td>\n                    </tr>\n                  }\n                  {\n                    this.props.needId &&\n                    <tr>\n                      <td>\n                        <strong style={{ marginLeft: '3%' }}>id</strong>\n                        <br></br>\n                        <strong style={{ color: 'red', fontSize: '15px' }}>&nbsp;*required</strong>\n                        <p>(Type: String)</p>\n\n                      </td>\n                      <td>\n                        <p>Introduce the _id property value of the company to retrieve</p>\n                        <Input\n                          type=\"text\"\n                          name=\"_id\"\n                          id=\"_id\"\n                          onChange={this.handleChange}\n                          placeholder=\"e.g: 52cdef7c4bab8bd675297d8b\"\n                          value={this.state._id}\n                        />\n                      </td>\n                    </tr>\n                  }\n                  {\n                    this.props.needBody &&\n                    <tr>\n                      <td>\n                        <strong style={{ marginLeft: '3%' }}>Body</strong>\n                        <br></br>\n                        <strong style={{ color: 'red', fontSize: 'small' }}>&nbsp;*required</strong>\n                        <p>(Type: JSON)</p>\n\n                      </td>\n                      <td>\n                        <p>Introduce the company in JSON format, it can be useful the following template given:</p>\n                        <Input style={{ color: 'white', backgroundColor: '#41444e', height: '600px' }}\n                          type=\"textarea\"\n                          name=\"body\"\n                          id=\"body\"\n                          onChange={this.handleChangeBody}\n                          value={this.state.exampleString}\n\n\n                        />\n                      </td>\n                    </tr>\n                  }\n                  {this.state.tryitout &&\n                    <tr>\n                      <td colSpan=\"2\">\n                        <Button onClick={this.handleClickExecute} color=\"primary\" style={{ width: '100%', textAlign: 'center', }}>Execute</Button>\n                      </td>\n                    </tr>\n\n                  }\n                  {this.state.response &&\n                    <tr>\n                      <td colSpan=\"2\">\n                        Server Response\n                    </td>\n\n                    </tr>}\n                  {this.state.response &&\n                    <tr style={{ borderBottomWidth: '2px', borderBottomStyle: 'solid' }}>\n                      <th >\n                        Code\n                    </th>\n                      <th>Details</th>\n                    </tr>}\n                  {this.state.response &&\n                    <tr>\n                      <td>\n                        {this.state.responseCode}\n                      </td>\n                      <td>\n                        <p>Response body</p>\n                        <div className=\"DivWithScroll\">\n                          <div className=\"DivToScroll\">\n                            {this.state.responseDetails === '{}' && this.state.responseCode === 204 &&\n                              <div>\n                                <p>No Content</p>\n                                <p>Delete done successfully</p>\n                              </div>\n                            }\n                            {this.state.responseCode === 400 &&\n                              <div>\n                                <p>Bad Request</p>\n                                <p>Check your JSON input!</p>\n                                \n                              </div>\n                            }\n                            {this.state.responseCode === 500 &&\n                              <div>\n                                <p>Internal Server Error</p>\n                                <p>Id introduced doesn't exist in DB</p>\n                                \n                              </div>\n                            }\n                            {this.state.responseDetails !== '{}' && <JSONPretty style={{ color: \"white\" }} id=\"json-pretty\" json={this.state.responseDetails}></JSONPretty>}\n\n\n\n                          </div>\n\n                        </div>\n                        <br></br>\n                        <p>Response headers</p>\n                        <div style={{ paddingTop: '5px', borderRadius: '2px', height: '33px', backgroundColor: '#41444e', color: 'white' }}>\n                          <div style={{ marginLeft: '3%', }}>\n\n                            {this.state.responseHeaders}\n\n                          </div>\n\n                        </div>\n\n                      </td>\n                    </tr>\n                  }\n\n                </tbody>\n              </Table>\n\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default ApiUsage;","import React from 'react';\nimport Login from './Login.js'\nimport ApiUsage from './ApiUsage.js'\nimport { Container } from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            token: this.checkCookie(),\n            signup: false,\n            created: false,\n            repeatedUsername: false,\n            errorLogin: false,\n            username: '',\n            usernameForAlert: '',\n            password: '',\n        };\n    }\n\n    checkCookie = () => {\n        var token = document.cookie;\n        if(token !== ''){\n            return token;\n        }else{\n            return null;\n        }\n    }\n\n\n    handleChange = (e) => {\n        this.setState({[e.target.name] : e.target.value});\n    }\n\n    handleClick = () => {\n        this.setState(\n            {signup: !this.state.signup,\n            created: false,\n            repeatedUsername: false,\n            username: '',\n            password: ''}\n        );\n    }\n    \n    handleClickSubmitSignUp = () => {\n        var data = {'username':this.state.username,\n                    'password' : this.state.password,\n                     }\n        fetch('https://scary-vampire-95646.herokuapp.com/api/user/signup', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify(data), \n        }).then((response) => {\n                if(response.status === 200) {\n                    this.setState(\n                        {signup: false,\n                        created: true,\n                        repeatedUsername: false,\n                        usernameForAlert: this.state.username, \n                        errorLogin: false,\n                        username: '',\n                        password: ''}\n                    );\n                }else{\n                    this.setState(\n                        {signup: true,\n                        created: false,\n                        repeatedUsername: true,\n                        errorLogin: false,\n                        username: '',\n                        password: ''}\n                    )\n                }\n                \n            })\n        \n    }\n\n    handleClickSubmitLogIn = () => {\n        var data = {'username':this.state.username,\n                    'password' : this.state.password,\n                     }\n        fetch('https://scary-vampire-95646.herokuapp.com/api/user/login', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify(data), \n        }).then((response) => {\n                if(response.status === 200) {\n                    response.json().then((responseData) => {\n                        this.setState(\n                            {token: responseData['token'],\n                            signup: null,\n                            created: null,\n                            repeatedUsername: false,\n                            errorLogin: false,\n                            usernameForAlert: this.state.username, \n                            username: '',\n                            password: ''}\n                        );\n                        document.cookie = responseData['token'];\n                    });\n                    \n                }else{\n                    this.setState(\n                        {signup: false,\n                        created: false,\n                        repeatedUsername: false,\n                        errorLogin: true,\n                        username: '',\n                        password: ''}\n                    )\n                }\n                \n            })\n        \n    }\n    \n\n    render(){\n        return(\n            <div className=\"App\">\n            {this.state.token === null && \n                    <Login onClick={this.handleClick} signup={this.state.signup} \n                        onClickSubmitSignUp={this.handleClickSubmitSignUp}\n                        onClickSubmitLogIn={this.handleClickSubmitLogIn}\n                        onChangeForm={this.handleChange}\n                        created={this.state.created} \n                        repeatedUsername={this.state.repeatedUsername}\n                        username= {this.state.username}\n                        password= {this.state.password}\n                        usernameForAlert = {this.state.usernameForAlert}\n                        errorLogin = {this.state.errorLogin} />\n            }\n            {\n                this.state.token !== null &&  \n                    <div style={{marginTop: '2%',}} className=\"divAPI\">\n                        <Container className=\"APIContainer\">\n                            <h1 style={{marginBottom: '2%',}}>Companies API</h1>\n                            <div className=\"description\">\n                                <p>GUI view which permits accessing to multiple information of a company list (including creation, update and delete) by doing request to \n                                    the API deployed in Heroku.\n                                    Both, this view and Restfull Api were developed  as first learning project by Javier Herraiz Olivas on his practice in company period.\n                                    GUI developed with React.js\n                                    API developed with Node.js, express.js, passport.js using MongoDB as DB storage and deployed with Heroku.\n                                </p>\n                            </div>\n                            <div style={{marginBottom: '2%',}}>\n                                Any questions?<br></br>\n                                <a href=\"mailto:javierherraizolivas@gmail.com\">Contact the developer</a>\n                            </div>\n                            <div>\n                                <br></br>\n                                <h3>Try it yourself</h3>\n                                <br></br>\n                            </div>\n                            <div className=\"APIUsages_list\">\n                                <ApiUsage method=\"GET\" borderColor=\"#007bff\" pathTitle=\"/api/companies\"\n                                 description=\"Retrieves all companies in DB\"\n                                 needId={false}\n                                 needBody={false}\n                                descriptionExtended=\"Returns a Json composed of all companies stored in the database, for each company every attributes or fields availables will be displayed\"\n                                uri=\"https://scary-vampire-95646.herokuapp.com/api/companies\"\n                                token ={this.state.token}\n                                buttonColor=\"primary\"\n                                />\n                                <br></br>\n                                <ApiUsage method=\"GET\" borderColor=\"#007bff\" pathTitle=\"/api/companies/{:companyId}\"\n                                 description=\"Retrieves from DB the company which _id field equals to :companyId\"\n                                 needId={true}\n                                 needBody={false}\n                                descriptionExtended=\"Returns a Json composed of the company stored in the database which _id field equals to the one introduced, for the company every attributes or fields availables will be displayed\"\n                                uri=\"https://scary-vampire-95646.herokuapp.com/api/companies/\"\n                                token ={this.state.token}\n                                buttonColor=\"primary\"\n                                />\n                                <br></br>\n                                <ApiUsage method=\"POST\" borderColor=\"#49cc90\" pathTitle=\"/api/companies\"\n                                 description=\"Creates a new company and stores in DB\"\n                                 needId={false}\n                                 needBody={true}\n                                descriptionExtended=\"Returns a Json composed of the new company created and stored in database, displaying all fields introduced and its values\"\n                                uri=\"https://scary-vampire-95646.herokuapp.com/api/companies\"\n                                token ={this.state.token}\n                                buttonColor=\"success\"\n                                />\n                                 <br></br>\n                                <ApiUsage method=\"PUT\" borderColor=\"#fca130\" pathTitle=\"/api/companies/{:companyId}\"\n                                 description=\"Updates all properties from the company stored in DB which _id equals to :companyId\"\n                                 needId={true}\n                                 needBody={true}                                 \n                                descriptionExtended=\"Returns a Json composed of the updated company and stored in database, displaying all fields with its values changed\"\n                                uri=\"https://scary-vampire-95646.herokuapp.com/api/companies/\"\n                                token ={this.state.token}\n                                buttonColor=\"warning\"\n                                />\n\n                                 <br></br>\n                                <ApiUsage method=\"PATCH\" borderColor=\"#fca130\" pathTitle=\"/api/companies/{:companyId}\"\n                                 description=\"Updates selected properties from the company stored in DB which _id equals to :companyId\"\n                                 needId={true}\n                                 needBody={true}\n                                descriptionExtended=\"Returns a Json composed of the updated company and stored in database, displaying all fields with its values changed\"\n                                uri=\"https://scary-vampire-95646.herokuapp.com/api/companies/\"\n                                token ={this.state.token}\n                                buttonColor=\"warning\"\n                                />\n                                 <br></br>\n                                <ApiUsage method=\"DELETE\" borderColor=\"#f93e3e\" pathTitle=\"/api/companies/{:companyId}\"\n                                 description=\"Deletes the company stored in DB which _id equals to :companyId\"\n                                 needId={true}\n                                 needBody={false}\n                                descriptionExtended=\"Returns an 201 No content response code if deletion was done successfully or 500 if something went wrong instead\"\n                                uri=\"https://scary-vampire-95646.herokuapp.com/api/companies/\"\n                                token ={this.state.token}\n                                buttonColor=\"danger\"\n                                />\n                            </div>\n                            \n                            \n                            \n                        </Container>\n                    </div>\n            }\n            </div>\n        );\n        \n        \n    }\n    \n    \n  }\n\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App.js'\n\n  \n  \n  \n// ========================================\n  \nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n  );"],"sourceRoot":""}